{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\addegee\\\\frontend\\\\src\\\\components\\\\Grid.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport '/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ITEMS_PER_PAGE = 9; // Number of items per page\n\nconst Grid = _ref => {\n  _s();\n  let {\n    photos\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const indexOfLastItem = currentPage * ITEMS_PER_PAGE;\n  const indexOfFirstItem = indexOfLastItem - ITEMS_PER_PAGE;\n  const currentItems = photos.slice(indexOfFirstItem, indexOfLastItem);\n  const totalPages = Math.ceil(photos.length / ITEMS_PER_PAGE);\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Our Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: currentItems.map(_ref2 => {\n        let {\n          photo,\n          _id\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid__item\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000/uploads/${photo}`,\n            alt: \"grid_image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, _id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => index + 1).map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: currentPage === page ? \"active\" : \"\",\n        onClick: () => handlePageChange(page),\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Grid, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","ITEMS_PER_PAGE","Grid","photos","currentPage","setCurrentPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","handlePageChange","pageNumber","map","photo","_id","Array","from","_","index","page"],"sources":["C:/Users/HP/Documents/addegee/frontend/src/components/Grid.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport '/style.css'\r\nconst ITEMS_PER_PAGE = 9; // Number of items per page\r\n\r\nconst Grid = ({ photos }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const indexOfLastItem = currentPage * ITEMS_PER_PAGE;\r\n  const indexOfFirstItem = indexOfLastItem - ITEMS_PER_PAGE;\r\n  const currentItems = photos.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const totalPages = Math.ceil(photos.length / ITEMS_PER_PAGE);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Our Gallery</h1>\r\n      <div className=\"grid\">\r\n        {currentItems.map(({ photo, _id }) => (\r\n          <div key={_id} className=\"grid__item\">\r\n            <img\r\n              src={`http://localhost:5000/uploads/${photo}`}\r\n              alt=\"grid_image\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"pagination\">\r\n        {Array.from({ length: totalPages }, (_, index) => index + 1).map((page) => (\r\n          <button\r\n            key={page}\r\n            className={currentPage === page ? \"active\" : \"\"}\r\n            onClick={() => handlePageChange(page)}\r\n          >\r\n            {page}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAA;AAAA;AACnB,MAAMC,cAAc,GAAG,CAAC,CAAC,CAAC;;AAE1B,MAAMC,IAAI,GAAG,QAAgB;EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMM,eAAe,GAAGF,WAAW,GAAGH,cAAc;EACpD,MAAMM,gBAAgB,GAAGD,eAAe,GAAGL,cAAc;EACzD,MAAMO,YAAY,GAAGL,MAAM,CAACM,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;EAEpE,MAAMI,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACT,MAAM,CAACU,MAAM,GAAGZ,cAAc,CAAC;EAE5D,MAAMa,gBAAgB,GAAIC,UAAU,IAAK;IACvCV,cAAc,CAACU,UAAU,CAAC;EAC5B,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UAAI;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,eACpB;MAAK,SAAS,EAAC,MAAM;MAAA,UAClBP,YAAY,CAACQ,GAAG,CAAC;QAAA,IAAC;UAAEC,KAAK;UAAEC;QAAI,CAAC;QAAA,oBAC/B;UAAe,SAAS,EAAC,YAAY;UAAA,uBACnC;YACE,GAAG,EAAG,iCAAgCD,KAAM,EAAE;YAC9C,GAAG,EAAC;UAAY;YAAA;YAAA;YAAA;UAAA;QAChB,GAJMC,GAAG;UAAA;UAAA;UAAA;QAAA,QAKP;MAAA,CACP;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,SAAS,EAAC,YAAY;MAAA,UACxBC,KAAK,CAACC,IAAI,CAAC;QAAEP,MAAM,EAAEH;MAAW,CAAC,EAAE,CAACW,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC,CAACN,GAAG,CAAEO,IAAI,iBACpE;QAEE,SAAS,EAAEnB,WAAW,KAAKmB,IAAI,GAAG,QAAQ,GAAG,EAAG;QAChD,OAAO,EAAE,MAAMT,gBAAgB,CAACS,IAAI,CAAE;QAAA,UAErCA;MAAI,GAJAA,IAAI;QAAA;QAAA;QAAA;MAAA,QAMZ;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA,gBACL;AAEP,CAAC;AAAC,GAvCIrB,IAAI;AAAA,KAAJA,IAAI;AAyCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}